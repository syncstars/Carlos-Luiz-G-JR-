import csv
import os

class Ativo:
   def _init_ (self, id, nome, categoria, status="Disponivel"):
    self.id = id
    self.nome = nome
    self.categoria = categoria
    self.status = status

class GerenciaAtivos:
  def _init_(self, arquivo):
    self.ativos = []
    self.arquivo = arquivo
    self.carregar_dados()

  def carregar_ativos(self):
   pass
  def salvar_ativos(self):
    with open(self.arquivo, 'w', newline='') as file:
      writer = csv.writer(file)
      writer.writerows(['ID', 'Nome', 'Categoria', 'Status'])
      for ativo in self.ativos:
        writer.writerow(ativo.to_list())

  def adicionar_ativo(self, ativo):

    pass

  def remover_ativo(self, id):

    pass

  def listar_ativos(self):

    pass

  def procurar_ativos(self, id):

    pass

  def atualizar_status(self, nome=None, categoria=None, status=None):

    pass
class Ativo:
  def _init_(self, id, nome, categoria, status="Disponivel"):
    self.id = id
    self.nome = nome
    self.categoria = categoria
    self.status = status

  def _str_ (self):
    return f'Ativo: {self.id}, {self.nome}, {self.categoria}, {self.status}'
  def to_list(self):
    return [self.id, self.nome, self.categoria, self.satus]

  class GerenciaAtivos:
    def _init_(self, aquivo):
      self.ativos =[]
      self.arquivo = arquivo
      self.carregar_ativos()

    def carregar_ativos(self):
      if os.path.exists(self.arquivo):
        with open(self.arquivo, mode 'r' , newline-'') as file:
          reader = csv.reader:
            if row:
              ativo =(int(row[0]), row[1], row[2], row[3])
              self.ativos.append(ativo)
        print('Ativos carregados os arquivo')
      else:
      with open(self.arquivo, mode-'w', newline-0) as file:
          writer = csv.writer(file)
          write  = csv.writerows(['ID', 'Nome', 'Categoria', 'Status'])
        print('arquivo criado')

      def salvar_ativos(self):
        with open(self.arquivo, mode='w', mode='w' ,newline='') as file:
          write = csv.writer(file)
          write = writerow([ 'ID', 'Nome', 'Categoria', 'Status'])
          for ativo in self.ativos:
            write.writerow(ativo.to_list())
      def adicionar_ativo(self, ativo):
        self.ativos.append(ativo)
        self.salvar_ativos()
        print(f'O ativo {ativo.nome} foi adicionado com sucesso')

      def remover_ativo(self, id):
        self.ativos = [ativo for ativo in self.ativos if ativo.id != id]
        self.salvar_ativos()
        print(f'O ativo com o id {id} foi removido com sucesso')
        return
        print(f'O ativo com o id {id} não foi encontrado')

      def listar_ativos(self):
        for ativo in self.ativos:
          print('Nenhum ativo encontrado')
        else:
          print('Listas de ativos:')
          for ativo in self.ativos:
            print(f' -{ativo}')

      def procurar_ativo(self,id):
        for ativo in self.ativos:
          if ativo.id == id:
            return ativo
        print(f'Ativo {id} não encontrado.')
        return None

      def atualizar_ativo(self, id, nome-None, categoria-None, status-None):
          ativo - self.procurar_ativo(id)
          if ativo:
              if nome:
                 ativo.nome = nome
              if descricao:
                 ativo.categoria = Categoria
              if status:
                 ativo.status = Status
              self.salvar_ativo()
              print(f'Ativo {id} não encontrado.')
      def menu():
          gerencia =GerenciaAtivos('ativos.csv')

          while True:
            print('1. Adicionar ativo')
            print('2. Remover ativo')
            print('3. Listar ativos')
            print('4. Procurar ativo')
            print('5. Atualizar ativo')
            print('6. Sair')

            escolha = input('Escolha uma opção:')

            if escolha == '1':
              id = input('ID  do ativo:')
              nome = input('nome do ativo:')
              categoria = input(' categoria do ativo:')
              status = input(' status do ativo:')
              ativo = Ativo(id, nome, categoria, status)
              gerencia.adicionar_ativo(ativo)
            elif escolha == '2':
              id = input('ID do ativo:')
              gerencia.remover_ativo(id)
            elif escolha == '3':
              id = int(input('ID do ativo ser atualizado:'))
              nome  = input('Novo nome(deixe em branco para nao alterar):')
              categoria = input('Nova categoria(deixe em branco para nao alterar):')
              status = input('Novo status(deixe em branco para nao alterar):')
              gerencia.atualizar_ativo(id, nome or None, categoria or None, status or None)
            elif escolha == '4'
              break
            else:
              print("Opção inválida. Tente novamente.")

            if _name_ == '_main_':
              menu()
